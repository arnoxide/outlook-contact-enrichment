version: '3.8'

services:
  db:
    image: postgres:15
    container_name: outlook_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 2sRuF9\3QG5@
      POSTGRES_DB: contact_enrichment
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - outlook_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d contact_enrichment"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: outlook_backend
    environment:
      - DATABASE_URL=postgresql://user:2sRuF9%5C3QG5%40@db:5432/contact_enrichment
      - JWT_SECRET=your_jwt_secret_here
      - PORT=3000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - outlook_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: outlook_frontend
    ports:
      - "3001:3001"
    networks:
      - outlook_network
    depends_on:
      - backend

  ngrok:
    image: ngrok/ngrok:latest
    container_name: outlook_ngrok
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    depends_on:
      - proxy
    command: ["start", "--all", "--config", "/etc/ngrok.yml"]
    networks:
      - outlook_network

  proxy:
    image: nginx:latest
    container_name: outlook_proxy
    ports:
      - "8081:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - outlook_network
    depends_on:
      - frontend
      - backend


volumes:
  postgres_data:

networks:
  outlook_network:
    driver: bridge
